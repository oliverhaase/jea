
aspect MethodConfinement {


	syn EscapingTypes Program.escapingTypes() {
		EscapingTypes result = new EscapingTypes();
		for ( ByteCodeClass clazz : getByteCodeClasss() )
			result = result.merge(clazz.escapingTypes());
		return result;		
	}
	
	syn EscapingTypes ByteCodeClass.escapingTypes() {
		EscapingTypes result = globallyEscapingTypes();
		result = result.merge(argEscapingTypes());
		return result;		
	}


	syn EscapingTypes ByteCodeClass.globallyEscapingTypes() {
		EscapingTypes result = new EscapingTypes();
		for ( Method method : getMethods() )
			result = result.merge(method.globallyEscapingTypes());
		return result;		
	}

	syn EscapingTypes ByteCodeClass.argEscapingTypes() {
		EscapingTypes result = new EscapingTypes();
		for ( Method method : getMethods() )
			if ( !method.getIsPrivate() )
				result = result.merge(method.argEscapingTypes());
		return result;		
	}
	
	syn EscapingTypes Method.globallyEscapingTypes() {
		return methodSummary().globallyEscapingTypes();
	}
	
	syn EscapingTypes Method.argEscapingTypes() {
		return methodSummary().argEscapingTypes();
	}	
	
}