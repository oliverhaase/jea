
aspect MethodResult {
	
	public Set<Slot> Method.results() {
		return exitPoint().results();	
	}


	public Set<Slot> Instruction.results() {
		return null;
	}

	public Set<Slot> Areturn.results() {
		Set<Slot> result = new HashSet<Slot>();
		for ( Frame frame : framesIn() )
			result.add(frame.getOpStack().peek());
		return result;	
	}

	public Set<Slot> Dreturn.results() {
		Set<Slot> result = new HashSet<Slot>();
		result.add(DontCareSlot.DOUBLE_SLOT);
		return result;	
	}

	public Set<Slot> Freturn.results() {
		Set<Slot> result = new HashSet<Slot>();
		result.add(DontCareSlot.NORMAL_SLOT);
		return result;	
	}
	
	public Set<Slot> Ireturn.results() {
		Set<Slot> result = new HashSet<Slot>();
		result.add(DontCareSlot.NORMAL_SLOT);
		return result;	
	}
	
	public Set<Slot> Lreturn.results() {
		Set<Slot> result = new HashSet<Slot>();
		result.add(DontCareSlot.DOUBLE_SLOT);
		return result;	
	}
	
	public Set<Slot> Return.results() {
		Set<Slot> result = new HashSet<Slot>();
		result.add(DontCareSlot.VOID_SLOT);
		return result;	
	}

	coll Set<Slot> ExitPoint.results() [new HashSet<Slot>()] with addAll;
	ReturnInstruction contributes results() to ExitPoint.results() for each successors();
	
}